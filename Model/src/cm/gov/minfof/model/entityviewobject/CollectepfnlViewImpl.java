package cm.gov.minfof.model.entityviewobject;


import cm.gov.minfof.model.entityviewobject.common.CollectepfnlView;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 21 16:08:10 WAT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CollectepfnlViewImpl extends VueImplementation implements CollectepfnlView {
    /**
     * This is the default constructor (do not remove).
     */
    public CollectepfnlViewImpl() {
    }


    /**
     * executeQueryForCollection - for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }


    /**
     * Returns the variable value for dateFin.
     * @return variable value for dateFin
     */
    public java.sql.Timestamp getdateFin() {
        return (java.sql.Timestamp) ensureVariableManager().getVariableValue("dateFin");
    }

    /**
     * Sets <code>value</code> for variable dateFin.
     * @param value value to bind as dateFin
     */
    public void setdateFin(java.sql.Timestamp value) {
        ensureVariableManager().setVariableValue("dateFin", value);
    }

    /**
     * Returns the variable value for dateDebut.
     * @return variable value for dateDebut
     */
    public java.sql.Timestamp getdateDebut() {
        return (java.sql.Timestamp) ensureVariableManager().getVariableValue("dateDebut");
    }

    /**
     * Sets <code>value</code> for variable dateDebut.
     * @param value value to bind as dateDebut
     */
    public void setdateDebut(java.sql.Timestamp value) {
        ensureVariableManager().setVariableValue("dateDebut", value);
    }
}

