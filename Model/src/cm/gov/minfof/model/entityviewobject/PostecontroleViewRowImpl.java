package cm.gov.minfof.model.entityviewobject;

import cm.gov.minfof.model.entity.PostecontroleImpl;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 13 15:47:42 CET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PostecontroleViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_POSTECONTROLE = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Idpostecontrole,
        Codeposte,
        Intituleposte,
        Posteexport,
        Idcommune,
        Nomcommune,
        CommuneView1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int IDPOSTECONTROLE = AttributesEnum.Idpostecontrole.index();
    public static final int CODEPOSTE = AttributesEnum.Codeposte.index();
    public static final int INTITULEPOSTE = AttributesEnum.Intituleposte.index();
    public static final int POSTEEXPORT = AttributesEnum.Posteexport.index();
    public static final int IDCOMMUNE = AttributesEnum.Idcommune.index();
    public static final int NOMCOMMUNE = AttributesEnum.Nomcommune.index();
    public static final int COMMUNEVIEW1 = AttributesEnum.CommuneView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PostecontroleViewRowImpl() {
    }

    /**
     * Gets Postecontrole entity object.
     * @return the Postecontrole
     */
    public PostecontroleImpl getPostecontrole() {
        return (PostecontroleImpl) getEntity(ENTITY_POSTECONTROLE);
    }

    /**
     * Gets the attribute value for idpostecontrole using the alias name Idpostecontrole.
     * @return the idpostecontrole
     */
    public BigDecimal getIdpostecontrole() {
        return (BigDecimal) getAttributeInternal(IDPOSTECONTROLE);
    }

    /**
     * Sets <code>value</code> as attribute value for idpostecontrole using the alias name Idpostecontrole.
     * @param value value to set the idpostecontrole
     */
    public void setIdpostecontrole(BigDecimal value) {
        setAttributeInternal(IDPOSTECONTROLE, value);
    }

    /**
     * Gets the attribute value for codeposte using the alias name Codeposte.
     * @return the codeposte
     */
    public String getCodeposte() {
        return (String) getAttributeInternal(CODEPOSTE);
    }

    /**
     * Sets <code>value</code> as attribute value for codeposte using the alias name Codeposte.
     * @param value value to set the codeposte
     */
    public void setCodeposte(String value) {
        setAttributeInternal(CODEPOSTE, value);
    }

    /**
     * Gets the attribute value for intituleposte using the alias name Intituleposte.
     * @return the intituleposte
     */
    public String getIntituleposte() {
        return (String) getAttributeInternal(INTITULEPOSTE);
    }

    /**
     * Sets <code>value</code> as attribute value for intituleposte using the alias name Intituleposte.
     * @param value value to set the intituleposte
     */
    public void setIntituleposte(String value) {
        setAttributeInternal(INTITULEPOSTE, value);
    }

    /**
     * Gets the attribute value for posteexport using the alias name Posteexport.
     * @return the posteexport
     */
    public Integer getPosteexport() {
        return (Integer) getAttributeInternal(POSTEEXPORT);
    }

    /**
     * Sets <code>value</code> as attribute value for posteexport using the alias name Posteexport.
     * @param value value to set the posteexport
     */
    public void setPosteexport(Integer value) {
        setAttributeInternal(POSTEEXPORT, value);
    }

    /**
     * Gets the attribute value for idcommune using the alias name Idcommune.
     * @return the idcommune
     */
    public BigDecimal getIdcommune() {
        return (BigDecimal) getAttributeInternal(IDCOMMUNE);
    }

    /**
     * Sets <code>value</code> as attribute value for idcommune using the alias name Idcommune.
     * @param value value to set the idcommune
     */
    public void setIdcommune(BigDecimal value) {
        setAttributeInternal(IDCOMMUNE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Nomcommune.
     * @return the Nomcommune
     */
    public String getNomcommune() {
        BigDecimal communeid = null;
                String communenane = null;
                //Check if DepartmentId is not null then get DepartmentName for that Id
                if (getIdcommune() != null) {
                    communeid = getIdcommune();
                    //getDepartmentsVO1 is ViewAccessor of LOV ViewObject
                    Row[] comrows;
                    
                    comrows = getCommuneView1().getFilteredRows("Idcommunes", communeid);
                    if (comrows.length > 0) {
                        communenane = comrows[0].getAttribute("Nomcommune").toString();
                    }
                    return communenane;

                } else {
                    return (String) getAttributeInternal(NOMCOMMUNE);
                }
        //return (String) getAttributeInternal(NOMCOMMUNE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Nomcommune.
     * @param value value to set the  Nomcommune
     */
    public void setNomcommune(String value) {
        setAttributeInternal(NOMCOMMUNE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CommuneView1.
     */
    public RowSet getCommuneView1() {
        return (RowSet) getAttributeInternal(COMMUNEVIEW1);
    }
}

