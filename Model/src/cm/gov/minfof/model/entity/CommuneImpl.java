package cm.gov.minfof.model.entity;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 06 07:41:30 WAT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CommuneImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Idcommunes,
        Nomcommune,
        Iddepartements,
        Codecommune,
        codesigif,
        Commune,
        IddepartementsCommune,
        Departement,
        Region,
        Departement1,
        Agrements1,
        Localite,
        Postecontrole,
        LettreVoiturePc,
        LettreVoiturePc1,
        LettreVoiturePc2,
        LettreVoiturePc3,
        TypeDocument;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDCOMMUNES = AttributesEnum.Idcommunes.index();
    public static final int NOMCOMMUNE = AttributesEnum.Nomcommune.index();
    public static final int IDDEPARTEMENTS = AttributesEnum.Iddepartements.index();
    public static final int CODECOMMUNE = AttributesEnum.Codecommune.index();
    public static final int CODESIGIF = AttributesEnum.codesigif.index();
    public static final int COMMUNE = AttributesEnum.Commune.index();
    public static final int IDDEPARTEMENTSCOMMUNE = AttributesEnum.IddepartementsCommune.index();
    public static final int DEPARTEMENT = AttributesEnum.Departement.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int DEPARTEMENT1 = AttributesEnum.Departement1.index();
    public static final int AGREMENTS1 = AttributesEnum.Agrements1.index();
    public static final int LOCALITE = AttributesEnum.Localite.index();
    public static final int POSTECONTROLE = AttributesEnum.Postecontrole.index();
    public static final int LETTREVOITUREPC = AttributesEnum.LettreVoiturePc.index();
    public static final int LETTREVOITUREPC1 = AttributesEnum.LettreVoiturePc1.index();
    public static final int LETTREVOITUREPC2 = AttributesEnum.LettreVoiturePc2.index();
    public static final int LETTREVOITUREPC3 = AttributesEnum.LettreVoiturePc3.index();
    public static final int TYPEDOCUMENT = AttributesEnum.TypeDocument.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CommuneImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("cm.gov.minfof.model.entity.Commune");
    }


    /**
     * Gets the attribute value for Idcommunes, using the alias name Idcommunes.
     * @return the value of Idcommunes
     */
    public BigDecimal getIdcommunes() {
        return (BigDecimal) getAttributeInternal(IDCOMMUNES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idcommunes.
     * @param value value to set the Idcommunes
     */
    public void setIdcommunes(BigDecimal value) {
        setAttributeInternal(IDCOMMUNES, value);
    }

    /**
     * Gets the attribute value for Nomcommune, using the alias name Nomcommune.
     * @return the value of Nomcommune
     */
    public String getNomcommune() {
        return (String) getAttributeInternal(NOMCOMMUNE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nomcommune.
     * @param value value to set the Nomcommune
     */
    public void setNomcommune(String value) {
        setAttributeInternal(NOMCOMMUNE, value);
    }

    /**
     * Gets the attribute value for Iddepartements, using the alias name Iddepartements.
     * @return the value of Iddepartements
     */
    public BigDecimal getIddepartements() {
        return (BigDecimal) getAttributeInternal(IDDEPARTEMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Iddepartements.
     * @param value value to set the Iddepartements
     */
    public void setIddepartements(BigDecimal value) {
        setAttributeInternal(IDDEPARTEMENTS, value);
    }

    /**
     * Gets the attribute value for Codecommune, using the alias name Codecommune.
     * @return the value of Codecommune
     */
    public String getCodecommune() {
        return (String) getAttributeInternal(CODECOMMUNE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Codecommune.
     * @param value value to set the Codecommune
     */
    public void setCodecommune(String value) {
        setAttributeInternal(CODECOMMUNE, value);
    }

    /**
     * Gets the attribute value for codesigif, using the alias name codesigif.
     * @return the value of codesigif
     */
    public String getcodesigif() {
        String codeSigif = "";
        if(getIdcommunes() != null)
        {
            ViewObject vo = rechercherVue("getCodeSigifCommune1");
            vo.setWhereClause(null);
            vo.setWhereClauseParams(null);
            vo.setWhereClause("Idcommunes = ?");
            vo.setWhereClauseParam(0, getIdcommunes());
            vo.executeQuery();
            if (vo.hasNext()) {
                Row r = vo.next();
                String result = (String) r.getAttribute("Codesigif");
                if(result != null)
                    codeSigif = result;
            }
            vo.setWhereClause(null);
            vo.setWhereClauseParams(null);
            vo.executeQuery();
        }
        return codeSigif;
      //  return (String) getAttributeInternal(CODESIGIF);
    }

    /**
     * Sets <code>value</code> as the attribute value for codesigif.
     * @param value value to set the codesigif
     */
    public void setcodesigif(String value) {
        setAttributeInternal(CODESIGIF, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCommune() {
        return (RowIterator) getAttributeInternal(COMMUNE);
    }

    /**
     * @return the associated entity CommuneImpl.
     */
    public CommuneImpl getIddepartementsCommune() {
        return (CommuneImpl) getAttributeInternal(IDDEPARTEMENTSCOMMUNE);
    }

    /**
     * Sets <code>value</code> as the associated entity CommuneImpl.
     */
    public void setIddepartementsCommune(CommuneImpl value) {
        setAttributeInternal(IDDEPARTEMENTSCOMMUNE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDepartement() {
        return (RowIterator) getAttributeInternal(DEPARTEMENT);
    }

    /**
     * @return the associated entity RegionImpl.
     */
    public RegionImpl getRegion() {
        return (RegionImpl) getAttributeInternal(REGION);
    }

    /**
     * Sets <code>value</code> as the associated entity RegionImpl.
     */
    public void setRegion(RegionImpl value) {
        setAttributeInternal(REGION, value);
    }

    /**
     * @return the associated entity DepartementImpl.
     */
    public DepartementImpl getDepartement1() {
        return (DepartementImpl) getAttributeInternal(DEPARTEMENT1);
    }

    /**
     * Sets <code>value</code> as the associated entity DepartementImpl.
     */
    public void setDepartement1(DepartementImpl value) {
        setAttributeInternal(DEPARTEMENT1, value);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAgrements1() {
        return (EntityImpl) getAttributeInternal(AGREMENTS1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAgrements1(EntityImpl value) {
        setAttributeInternal(AGREMENTS1, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLocalite() {
        return (RowIterator) getAttributeInternal(LOCALITE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPostecontrole() {
        return (RowIterator) getAttributeInternal(POSTECONTROLE);
    }


    /**
     * @return the associated entity LettreVoiturePcImpl.
     */
    public LettreVoiturePcImpl getLettreVoiturePc() {
        return (LettreVoiturePcImpl) getAttributeInternal(LETTREVOITUREPC);
    }

    /**
     * Sets <code>value</code> as the associated entity LettreVoiturePcImpl.
     */
    public void setLettreVoiturePc(LettreVoiturePcImpl value) {
        setAttributeInternal(LETTREVOITUREPC, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLettreVoiturePc1() {
        return (RowIterator) getAttributeInternal(LETTREVOITUREPC1);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLettreVoiturePc2() {
        return (RowIterator) getAttributeInternal(LETTREVOITUREPC2);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLettreVoiturePc3() {
        return (RowIterator) getAttributeInternal(LETTREVOITUREPC3);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getTypeDocument() {
        return (EntityImpl) getAttributeInternal(TYPEDOCUMENT);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTypeDocument(EntityImpl value) {
        setAttributeInternal(TYPEDOCUMENT, value);
    }


    /**
     * @param idcommunes key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal idcommunes) {
        return new Key(new Object[] { idcommunes });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
            super.doDML(operation, e);
            /*      if (operation == DML_INSERT) {
                BigDecimal id = getLastId("getLastIdCollectePfnl1");
                setIdcollectepfnl(id);
            } */
    }
    
    public BigDecimal getLastId(String viewName) {
        BigDecimal lastId=new BigDecimal(0);
        ViewObject vo = this.getDBTransaction()
                            .getRootApplicationModule()
                            .findViewObject(viewName);
        vo.executeQuery();
        if (vo.hasNext()) {
            Row r = vo.next();
            lastId = (BigDecimal) r.getAttribute(0);
        }
        BigDecimal un = new BigDecimal(1);
        lastId = lastId.add(un);
        return lastId; 
    }

    public ViewObject rechercherVue(String viewName) {
        ViewObject vo = this.getDBTransaction()
                            .getRootApplicationModule()
                            .findViewObject(viewName);
        return vo; 
        }
}

