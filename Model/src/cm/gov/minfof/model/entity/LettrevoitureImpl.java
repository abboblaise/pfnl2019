package cm.gov.minfof.model.entity;

import java.math.BigDecimal;

import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 14 11:49:28 CET 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LettrevoitureImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Idlettrevoiture,
        Idpermissionnaire,
        Iddepartementdestination,
        Nomconducteur,
        Idpostechargement,
        Numerolettrevoiture,
        Idpermis,
        Datelettrevoiture,
        Immatriculation,
        iddepartemental,
        idregional,
        nomdepart,
        numpermis,
        nomacteur,
        Lettrevoiture2,
        IddepartementdestinationLettrevoiture,
        Lettrevoiture4,
        IdpermissionnaireLettrevoiture,
        Detailslettrevoiture2,
        Detailslettrevoiture4,
        Detailslettrevoiture5,
        Detailslettrevoiture6,
        Detailslettrevoiture7;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDLETTREVOITURE = AttributesEnum.Idlettrevoiture.index();
    public static final int IDPERMISSIONNAIRE = AttributesEnum.Idpermissionnaire.index();
    public static final int IDDEPARTEMENTDESTINATION = AttributesEnum.Iddepartementdestination.index();
    public static final int NOMCONDUCTEUR = AttributesEnum.Nomconducteur.index();
    public static final int IDPOSTECHARGEMENT = AttributesEnum.Idpostechargement.index();
    public static final int NUMEROLETTREVOITURE = AttributesEnum.Numerolettrevoiture.index();
    public static final int IDPERMIS = AttributesEnum.Idpermis.index();
    public static final int DATELETTREVOITURE = AttributesEnum.Datelettrevoiture.index();
    public static final int IMMATRICULATION = AttributesEnum.Immatriculation.index();
    public static final int IDDEPARTEMENTAL = AttributesEnum.iddepartemental.index();
    public static final int IDREGIONAL = AttributesEnum.idregional.index();
    public static final int NOMDEPART = AttributesEnum.nomdepart.index();
    public static final int NUMPERMIS = AttributesEnum.numpermis.index();
    public static final int NOMACTEUR = AttributesEnum.nomacteur.index();
    public static final int LETTREVOITURE2 = AttributesEnum.Lettrevoiture2.index();
    public static final int IDDEPARTEMENTDESTINATIONLETTREVOITURE =
        AttributesEnum.IddepartementdestinationLettrevoiture.index();
    public static final int LETTREVOITURE4 = AttributesEnum.Lettrevoiture4.index();
    public static final int IDPERMISSIONNAIRELETTREVOITURE = AttributesEnum.IdpermissionnaireLettrevoiture.index();
    public static final int DETAILSLETTREVOITURE2 = AttributesEnum.Detailslettrevoiture2.index();
    public static final int DETAILSLETTREVOITURE4 = AttributesEnum.Detailslettrevoiture4.index();
    public static final int DETAILSLETTREVOITURE5 = AttributesEnum.Detailslettrevoiture5.index();
    public static final int DETAILSLETTREVOITURE6 = AttributesEnum.Detailslettrevoiture6.index();
    public static final int DETAILSLETTREVOITURE7 = AttributesEnum.Detailslettrevoiture7.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LettrevoitureImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("cm.gov.minfof.model.entity.Lettrevoiture");
    }


    /**
     * Gets the attribute value for Idlettrevoiture, using the alias name Idlettrevoiture.
     * @return the value of Idlettrevoiture
     */
    public BigDecimal getIdlettrevoiture() {
        return (BigDecimal) getAttributeInternal(IDLETTREVOITURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idlettrevoiture.
     * @param value value to set the Idlettrevoiture
     */
    public void setIdlettrevoiture(BigDecimal value) {
        setAttributeInternal(IDLETTREVOITURE, value);
    }

    /**
     * Gets the attribute value for Idpermissionnaire, using the alias name Idpermissionnaire.
     * @return the value of Idpermissionnaire
     */
    public BigDecimal getIdpermissionnaire() {
        return (BigDecimal) getAttributeInternal(IDPERMISSIONNAIRE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idpermissionnaire.
     * @param value value to set the Idpermissionnaire
     */
    public void setIdpermissionnaire(BigDecimal value) {
        setAttributeInternal(IDPERMISSIONNAIRE, value);
    }

    /**
     * Gets the attribute value for Iddepartementdestination, using the alias name Iddepartementdestination.
     * @return the value of Iddepartementdestination
     */
    public BigDecimal getIddepartementdestination() {
        //System.out.println("Entr√©e dans le getter");
       return (BigDecimal)getAttributeInternal(IDDEPARTEMENTDESTINATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Iddepartementdestination.
     * @param value value to set the Iddepartementdestination
     */
    public void setIddepartementdestination(BigDecimal value) {
        setAttributeInternal(IDDEPARTEMENTDESTINATION, value);
    }

    /**
     * Gets the attribute value for Nomconducteur, using the alias name Nomconducteur.
     * @return the value of Nomconducteur
     */
    public String getNomconducteur() {
        return (String) getAttributeInternal(NOMCONDUCTEUR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nomconducteur.
     * @param value value to set the Nomconducteur
     */
    public void setNomconducteur(String value) {
        setAttributeInternal(NOMCONDUCTEUR, value);
    }

    /**
     * Gets the attribute value for Idpostechargement, using the alias name Idpostechargement.
     * @return the value of Idpostechargement
     */
    public BigDecimal getIdpostechargement() {
        return (BigDecimal) getAttributeInternal(IDPOSTECHARGEMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idpostechargement.
     * @param value value to set the Idpostechargement
     */
    public void setIdpostechargement(BigDecimal value) {
        setAttributeInternal(IDPOSTECHARGEMENT, value);
    }

    /**
     * Gets the attribute value for Numerolettrevoiture, using the alias name Numerolettrevoiture.
     * @return the value of Numerolettrevoiture
     */
    public String getNumerolettrevoiture() {
        return (String) getAttributeInternal(NUMEROLETTREVOITURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Numerolettrevoiture.
     * @param value value to set the Numerolettrevoiture
     */
    public void setNumerolettrevoiture(String value) {
        setAttributeInternal(NUMEROLETTREVOITURE, value);
    }

    /**
     * Gets the attribute value for Idpermis, using the alias name Idpermis.
     * @return the value of Idpermis
     */
    public BigDecimal getIdpermis() {
        
        return (BigDecimal) getAttributeInternal(IDPERMIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idpermis.
     * @param value value to set the Idpermis
     */
    public void setIdpermis(BigDecimal value) {
        setAttributeInternal(IDPERMIS, value);
    }

    /**
     * Gets the attribute value for Datelettrevoiture, using the alias name Datelettrevoiture.
     * @return the value of Datelettrevoiture
     */
    public Timestamp getDatelettrevoiture() {
        return (Timestamp) getAttributeInternal(DATELETTREVOITURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Datelettrevoiture.
     * @param value value to set the Datelettrevoiture
     */
    public void setDatelettrevoiture(Timestamp value) {
        setAttributeInternal(DATELETTREVOITURE, value);
    }

    /**
     * Gets the attribute value for Immatriculation, using the alias name Immatriculation.
     * @return the value of Immatriculation
     */
    public String getImmatriculation() {
        return (String) getAttributeInternal(IMMATRICULATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Immatriculation.
     * @param value value to set the Immatriculation
     */
    public void setImmatriculation(String value) {
        setAttributeInternal(IMMATRICULATION, value);
    }

    /**
     * Gets the attribute value for iddepartemental, using the alias name iddepartemental.
     * @return the value of iddepartemental
     */
    public BigDecimal getiddepartemental() {
        FacesContext fc = FacesContext.getCurrentInstance();
        HttpSession session = (HttpSession) fc.getExternalContext().getSession(true);
        UserData ud = (UserData) session.getAttribute("user");
        System.out.println("Id d√©partement"+ud.getIddepartement());
        return ud.getIddepartement();
        
    }

    /**
     * Sets <code>value</code> as the attribute value for iddepartemental.
     * @param value value to set the iddepartemental
     */
    public void setiddepartemental(BigDecimal value) {
        setAttributeInternal(IDDEPARTEMENTAL, value);
    }

    /**
     * Gets the attribute value for idregional, using the alias name idregional.
     * @return the value of idregional
     */
    public BigDecimal getidregional() {
        FacesContext fc = FacesContext.getCurrentInstance();
        HttpSession session = (HttpSession) fc.getExternalContext().getSession(true);
        UserData ud = (UserData) session.getAttribute("user");
        return ud.getIdregion();
        //return (BigDecimal) getAttributeInternal(IDREGIONAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for idregional.
     * @param value value to set the idregional
     */
    public void setidregional(BigDecimal value) {
        setAttributeInternal(IDREGIONAL, value);
    }

    /**
     * Gets the attribute value for nomdepart, using the alias name nomdepart.
     * @return the value of nomdepart
     */
    public String getnomdepart() {
        return (String) getAttributeInternal(NOMDEPART);
    }

    /**
     * Sets <code>value</code> as the attribute value for nomdepart.
     * @param value value to set the nomdepart
     */
    public void setnomdepart(String value) {
        setAttributeInternal(NOMDEPART, value);
    }

    /**
     * Gets the attribute value for numpermis, using the alias name numpermis.
     * @return the value of numpermis
     */
    public String getnumpermis() {
        return (String) getAttributeInternal(NUMPERMIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for numpermis.
     * @param value value to set the numpermis
     */
    public void setnumpermis(String value) {
        setAttributeInternal(NUMPERMIS, value);
    }

    /**
     * Gets the attribute value for nomacteur, using the alias name nomacteur.
     * @return the value of nomacteur
     */
    public String getnomacteur() {
        return (String) getAttributeInternal(NOMACTEUR);
    }

    /**
     * Sets <code>value</code> as the attribute value for nomacteur.
     * @param value value to set the nomacteur
     */
    public void setnomacteur(String value) {
        setAttributeInternal(NOMACTEUR, value);
    }

    @Override
    protected void doDML(int operation, TransactionEvent transactionEvent) {
        if (operation == DML_INSERT) {
            BigDecimal id = getLastId("getLastidLettrevoiture1");
            setIdlettrevoiture(id);
        }
        super.doDML(operation, transactionEvent);        
    }
    
    public BigDecimal getLastId(String viewName)
    {
        BigDecimal lastId=new BigDecimal(0);
        ViewObject vo = this.getDBTransaction()
                            .getRootApplicationModule()
                            .findViewObject(viewName);
        vo.executeQuery();
        if (vo.hasNext())
        {
            Row r = vo.next();
            lastId = (BigDecimal) r.getAttribute(0);
        }
        BigDecimal un = new BigDecimal(1);
        lastId = lastId.add(un);
        return lastId; 
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLettrevoiture2() {
        return (RowIterator) getAttributeInternal(LETTREVOITURE2);
    }

    /**
     * @return the associated entity LettrevoitureImpl.
     */
    public LettrevoitureImpl getIddepartementdestinationLettrevoiture() {
        return (LettrevoitureImpl) getAttributeInternal(IDDEPARTEMENTDESTINATIONLETTREVOITURE);
    }

    /**
     * Sets <code>value</code> as the associated entity LettrevoitureImpl.
     */
    public void setIddepartementdestinationLettrevoiture(LettrevoitureImpl value) {
        setAttributeInternal(IDDEPARTEMENTDESTINATIONLETTREVOITURE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLettrevoiture4() {
        return (RowIterator) getAttributeInternal(LETTREVOITURE4);
    }

    /**
     * @return the associated entity LettrevoitureImpl.
     */
    public LettrevoitureImpl getIdpermissionnaireLettrevoiture() {
        return (LettrevoitureImpl) getAttributeInternal(IDPERMISSIONNAIRELETTREVOITURE);
    }

    /**
     * Sets <code>value</code> as the associated entity LettrevoitureImpl.
     */
    public void setIdpermissionnaireLettrevoiture(LettrevoitureImpl value) {
        setAttributeInternal(IDPERMISSIONNAIRELETTREVOITURE, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDetailslettrevoiture2() {
        return (EntityImpl) getAttributeInternal(DETAILSLETTREVOITURE2);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDetailslettrevoiture2(EntityImpl value) {
        setAttributeInternal(DETAILSLETTREVOITURE2, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDetailslettrevoiture4() {
        return (EntityImpl) getAttributeInternal(DETAILSLETTREVOITURE4);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDetailslettrevoiture4(EntityImpl value) {
        setAttributeInternal(DETAILSLETTREVOITURE4, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDetailslettrevoiture5() {
        return (RowIterator) getAttributeInternal(DETAILSLETTREVOITURE5);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDetailslettrevoiture6() {
        return (RowIterator) getAttributeInternal(DETAILSLETTREVOITURE6);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDetailslettrevoiture7() {
        return (RowIterator) getAttributeInternal(DETAILSLETTREVOITURE7);
    }

    /**
     * @param idlettrevoiture key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal idlettrevoiture) {
        return new Key(new Object[] { idlettrevoiture });
    }


}

