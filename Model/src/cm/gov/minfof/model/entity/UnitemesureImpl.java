package cm.gov.minfof.model.entity;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 17 14:30:10 WAT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UnitemesureImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Idunitemesure,
        Libelleunitemesure,
        Idcategorie,
        Ordregrandeur,
        Ratio,
        Actif,
        Arrondi,
        Unitemesure,
        IdcategorieUnitemesure,
        Categorieunitemesure,
        PartiesProduitsPfnl,
        PartiesProduitsPfnl1,
        Detailscollectepfnl,
        Detailsexportpfnl;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDUNITEMESURE = AttributesEnum.Idunitemesure.index();
    public static final int LIBELLEUNITEMESURE = AttributesEnum.Libelleunitemesure.index();
    public static final int IDCATEGORIE = AttributesEnum.Idcategorie.index();
    public static final int ORDREGRANDEUR = AttributesEnum.Ordregrandeur.index();
    public static final int RATIO = AttributesEnum.Ratio.index();
    public static final int ACTIF = AttributesEnum.Actif.index();
    public static final int ARRONDI = AttributesEnum.Arrondi.index();
    public static final int UNITEMESURE = AttributesEnum.Unitemesure.index();
    public static final int IDCATEGORIEUNITEMESURE = AttributesEnum.IdcategorieUnitemesure.index();
    public static final int CATEGORIEUNITEMESURE = AttributesEnum.Categorieunitemesure.index();
    public static final int PARTIESPRODUITSPFNL = AttributesEnum.PartiesProduitsPfnl.index();
    public static final int PARTIESPRODUITSPFNL1 = AttributesEnum.PartiesProduitsPfnl1.index();
    public static final int DETAILSCOLLECTEPFNL = AttributesEnum.Detailscollectepfnl.index();
    public static final int DETAILSEXPORTPFNL = AttributesEnum.Detailsexportpfnl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UnitemesureImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("cm.gov.minfof.model.entity.Unitemesure");
    }


    /**
     * Gets the attribute value for Idunitemesure, using the alias name Idunitemesure.
     * @return the value of Idunitemesure
     */
    public BigDecimal getIdunitemesure() {
        return (BigDecimal) getAttributeInternal(IDUNITEMESURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idunitemesure.
     * @param value value to set the Idunitemesure
     */
    public void setIdunitemesure(BigDecimal value) {
        setAttributeInternal(IDUNITEMESURE, value);
    }

    /**
     * Gets the attribute value for Libelleunitemesure, using the alias name Libelleunitemesure.
     * @return the value of Libelleunitemesure
     */
    public String getLibelleunitemesure() {
        return (String) getAttributeInternal(LIBELLEUNITEMESURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Libelleunitemesure.
     * @param value value to set the Libelleunitemesure
     */
    public void setLibelleunitemesure(String value) {
        setAttributeInternal(LIBELLEUNITEMESURE, value);
    }

    /**
     * Gets the attribute value for Idcategorie, using the alias name Idcategorie.
     * @return the value of Idcategorie
     */
    public BigDecimal getIdcategorie() {
        return (BigDecimal) getAttributeInternal(IDCATEGORIE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idcategorie.
     * @param value value to set the Idcategorie
     */
    public void setIdcategorie(BigDecimal value) {
        setAttributeInternal(IDCATEGORIE, value);
    }

    /**
     * Gets the attribute value for Ordregrandeur, using the alias name Ordregrandeur.
     * @return the value of Ordregrandeur
     */
    public String getOrdregrandeur() {
        return (String) getAttributeInternal(ORDREGRANDEUR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ordregrandeur.
     * @param value value to set the Ordregrandeur
     */
    public void setOrdregrandeur(String value) {
        setAttributeInternal(ORDREGRANDEUR, value);
    }

    /**
     * Gets the attribute value for Ratio, using the alias name Ratio.
     * @return the value of Ratio
     */
    public Float getRatio() {
        return (Float) getAttributeInternal(RATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ratio.
     * @param value value to set the Ratio
     */
    public void setRatio(Float value) {
        setAttributeInternal(RATIO, value);
    }

    /**
     * Gets the attribute value for Actif, using the alias name Actif.
     * @return the value of Actif
     */
    public Integer getActif() {
        return (Integer) getAttributeInternal(ACTIF);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actif.
     * @param value value to set the Actif
     */
    public void setActif(Integer value) {
        setAttributeInternal(ACTIF, value);
    }

    /**
     * Gets the attribute value for Arrondi, using the alias name Arrondi.
     * @return the value of Arrondi
     */
    public Float getArrondi() {
        return (Float) getAttributeInternal(ARRONDI);
    }

    /**
     * Sets <code>value</code> as the attribute value for Arrondi.
     * @param value value to set the Arrondi
     */
    public void setArrondi(Float value) {
        setAttributeInternal(ARRONDI, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUnitemesure() {
        return (RowIterator) getAttributeInternal(UNITEMESURE);
    }

    /**
     * @return the associated entity UnitemesureImpl.
     */
    public UnitemesureImpl getIdcategorieUnitemesure() {
        return (UnitemesureImpl) getAttributeInternal(IDCATEGORIEUNITEMESURE);
    }

    /**
     * Sets <code>value</code> as the associated entity UnitemesureImpl.
     */
    public void setIdcategorieUnitemesure(UnitemesureImpl value) {
        setAttributeInternal(IDCATEGORIEUNITEMESURE, value);
    }

    /**
     * @return the associated entity CategorieunitemesureImpl.
     */
    public CategorieunitemesureImpl getCategorieunitemesure() {
        return (CategorieunitemesureImpl) getAttributeInternal(CATEGORIEUNITEMESURE);
    }

    /**
     * Sets <code>value</code> as the associated entity CategorieunitemesureImpl.
     */
    public void setCategorieunitemesure(CategorieunitemesureImpl value) {
        setAttributeInternal(CATEGORIEUNITEMESURE, value);
    }


    /**
     * @return the associated entity PartiesProduitsPfnlImpl.
     */
    public PartiesProduitsPfnlImpl getPartiesProduitsPfnl() {
        return (PartiesProduitsPfnlImpl) getAttributeInternal(PARTIESPRODUITSPFNL);
    }

    /**
     * Sets <code>value</code> as the associated entity PartiesProduitsPfnlImpl.
     */
    public void setPartiesProduitsPfnl(PartiesProduitsPfnlImpl value) {
        setAttributeInternal(PARTIESPRODUITSPFNL, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPartiesProduitsPfnl1() {
        return (RowIterator) getAttributeInternal(PARTIESPRODUITSPFNL1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDetailscollectepfnl() {
        return (RowIterator) getAttributeInternal(DETAILSCOLLECTEPFNL);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDetailsexportpfnl() {
        return (RowIterator) getAttributeInternal(DETAILSEXPORTPFNL);
    }


    /**
     * @param idunitemesure key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal idunitemesure) {
        return new Key(new Object[] { idunitemesure });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            System.out.println("actif = " + getActif());
            BigDecimal id = getLastId("getLastIdUnitMesure1");
            setIdunitemesure(id);
        }
        super.doDML(operation, e);
    }
    
    public BigDecimal getLastId(String viewName) {
        System.out.println("entree dans getLastId");
        BigDecimal lastId=new BigDecimal(0);
        ViewObject vo = this.getDBTransaction()
                            .getRootApplicationModule()
                            .findViewObject(viewName);
        vo.executeQuery();
        if (vo.hasNext()) {
            Row r = vo.next();
            lastId = (BigDecimal) r.getAttribute(0);
            System.out.println("last Id = " + lastId);
            vo.closeRowSet();
        }
        BigDecimal un = new BigDecimal(1);
        lastId = lastId.add(un);
        return lastId; 
    }
}

